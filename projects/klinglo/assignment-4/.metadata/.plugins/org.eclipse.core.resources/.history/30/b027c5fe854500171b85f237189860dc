package edu.osu.cs362;
/**
 *  This class provides a basic set of test cases for the
 *  Appt class.
 */
import org.junit.Test;
import java.util.Random;


import static org.junit.Assert.*;

public class ApptTest {
    //Test that getValid() works as expected.
	@Test
	public void test01()  throws Throwable  {
		Random rand = new Random();

		int startHour,
			startMinute,
			startDay,
			startMonth,
			startYear;
		short length;
		char[] text = new char[300];
		String title,
			description;
		boolean isValid;
		
		for(int test = 0; test < 10000; test++){
			startHour = rand.nextInt(30);
			startMinute = rand.nextInt(70);
			startDay = rand.nextInt(50);
			startMonth = rand.nextInt(20);
			startYear = rand.nextInt(3000);
			length = (byte)(rand.nextInt(100));
			//if(length > 0){
				for (int i = 0; i < length; i++)
					text[i] = (char)(rand.nextInt('~' - ' ') + ' ');
				text[length - 1] = '\0';
				title = new String(text);
			//}else
				//title = null;
			length = (byte)(rand.nextInt(200));
			//if(length > 0){
				for (int i = 0; i < length; i++)
					text[i] = (char)(rand.nextInt('~' - ' ') + ' ');
				text[length - 1] = '\0';
				description = new String(text);
			//}else
				//description = null;
			
			//Construct a new Appointment object with the initial data	
			Appt appt = new Appt(startHour,
			        startMinute,
			        startDay,
			        startMonth,
			        startYear,
			        title,
			        description);
			if(startHour<0 || startHour>23)
		   		isValid = false;
		   	else
		       	if(startMinute<0 || startMinute>59)
		       		isValid = false;
		       	else
		           	if(startDay<1 || startDay>31)
		           		isValid = false;
		           	else
		               	if(startMonth<1 || startMonth>12)
		               		isValid = false;
		               	else
		               		isValid = true;

			//Assertions
			assertEquals(isValid, appt.getValid());
			
			assertEquals(title, appt.getTitle());
		    assertEquals(description, appt.getDescription());
		}
	}

	/*/Test that setDescription() works as expected
	@Test
	public void test10() {
		Random rand = new Random();

		int startHour,
			startMinute,
			startDay,
			startMonth,
			startYear;
		short length;
		String title,
			description;

		for(int test = 0; test < 10000; test++){
			startHour = 21;
			startMinute = 0;
			startDay = 2;
		    startMonth = 12;
			startYear = 2017;
			length = (byte)(rand.nextInt(100));
			char[] text = new char[length];
			for (int i = 0; i < length; i++)
				text[i] = (char)(rand.nextInt('~' - ' ') + ' ');
			text[length - 1] = '\0';
			title = new String(text);
			length = (byte)(rand.nextInt(200));
			text = new char[length];
			for (int i = 0; i < length; i++)
				text[i] = (char)(rand.nextInt('~' - ' ') + ' ');
			text[length - 1] = '\0';
			description = new String(text);
	
		    Appt appt = new Appt(startHour,
		            startMinute,
		            startDay,
		            startMonth,
		            startYear,
		            title,
		            description);
		    
		    assertTrue(appt.getValid());
	
		    assertEquals(title, appt.getTitle());
		    assertEquals(description, appt.getDescription());
		}
	}*/
	
}
