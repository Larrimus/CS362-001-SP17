/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 04:21:00 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 1721, 1721, "tZZ65_&l!Zz$0r", "tZZ65_&l!Zz$0r");
      assertEquals(1721, appt0.getStartMonth());
      
      appt0.setStartMonth(12);
      assertEquals(1721, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(2, 2, 31, (-2468), 31, "x[{o[", "F)|U&3");
      assertFalse(appt0.getValid());
      assertEquals(2, appt0.getStartHour());
      assertEquals(31, appt0.getStartDay());
      assertEquals("F)|U&3", appt0.getDescription());
      assertEquals(31, appt0.getStartYear());
      assertEquals(2, appt0.getStartMinute());
      assertEquals("x[{o[", appt0.getTitle());
      assertEquals(-2468, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 11, "5jp?M8oG8H&xC", "");
      appt0.setStartMinute(59);
      assertEquals(59, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-3144), (-3144), "]tZZ65_&l!Zz$0r", "]tZZ65_&l!Zz$0r");
      assertEquals(-3144, appt0.getStartMonth());
      
      appt0.setStartMonth(9);
      boolean boolean0 = appt0.getValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, (String) null, (String) null);
      String string0 = appt0.getTitle();
      assertEquals(11, appt0.getStartDay());
      assertNotNull(string0);
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartYear());
      assertEquals(11, appt0.getStartHour());
      assertTrue(appt0.getValid());
      assertEquals(11, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(31, 31, 31, 31, (-2508), "", "");
      int int0 = appt0.getStartYear();
      assertEquals(31, appt0.getStartHour());
      assertEquals(31, appt0.getStartMinute());
      assertEquals(31, appt0.getStartDay());
      assertEquals((-2508), int0);
      assertEquals(31, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(1373, 1373, 1373, 1373, 1373, "", "");
      int int0 = appt0.getStartMonth();
      assertFalse(appt0.getValid());
      assertEquals(1373, int0);
      assertEquals(1373, appt0.getStartDay());
      assertEquals(1373, appt0.getStartYear());
      assertEquals(1373, appt0.getStartMinute());
      assertEquals(1373, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(3421, 3421, 3421, (-1747), 3421, "uujAKzHo&6kI!QJ*", "uujAKzHo&6kI!QJ*");
      int int0 = appt0.getStartMonth();
      assertEquals("uujAKzHo&6kI!QJ*", appt0.getTitle());
      assertEquals((-1747), int0);
      assertFalse(appt0.getValid());
      assertEquals(3421, appt0.getStartMinute());
      assertEquals(3421, appt0.getStartDay());
      assertEquals("uujAKzHo&6kI!QJ*", appt0.getDescription());
      assertEquals(3421, appt0.getStartYear());
      assertEquals(3421, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "NYvO8pF*KMj=@", "NYvO8pF*KMj=@");
      int int0 = appt0.getStartMinute();
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals("NYvO8pF*KMj=@", appt0.getTitle());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("NYvO8pF*KMj=@", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(23, 2132, 0, 23, (-3759), (String) null, (String) null);
      int int0 = appt0.getStartMinute();
      assertEquals(-3759, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals(23, appt0.getStartHour());
      assertEquals(2132, int0);
      assertEquals(23, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 11, 0, 11, 11, "5jp?M8oG8H&xC", "");
      int int0 = appt0.getStartHour();
      assertEquals(11, appt0.getStartYear());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals("5jp?M8oG8H&xC", appt0.getTitle());
      assertEquals("", appt0.getDescription());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(592, 1574, 1574, (-335), 1574, "javax.xml.datatype.Duration#isSet(DatatypeConstants.Field field)", "pbfJ");
      int int0 = appt0.getStartHour();
      assertEquals(592, int0);
      assertEquals("pbfJ", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(1574, appt0.getStartYear());
      assertEquals(-335, appt0.getStartMonth());
      assertEquals("javax.xml.datatype.Duration#isSet(DatatypeConstants.Field field)", appt0.getTitle());
      assertEquals(1574, appt0.getStartMinute());
      assertEquals(1574, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(0, (-50), 0, 1893, (-50), "\t", "\t");
      int int0 = appt0.getStartDay();
      assertEquals(-50, appt0.getStartYear());
      assertEquals("\t", appt0.getTitle());
      assertEquals(1893, appt0.getStartMonth());
      assertEquals(-50, appt0.getStartMinute());
      assertEquals("\t", appt0.getDescription());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 14, 14, 3348, "", "");
      int int0 = appt0.getStartDay();
      assertEquals(11, appt0.getStartHour());
      assertEquals(14, int0);
      assertEquals(11, appt0.getStartMinute());
      assertEquals(3348, appt0.getStartYear());
      assertEquals(14, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt((-562), (-562), (-562), (-562), (-562), "Y_Rq9/Hr(s", "Uf*dR$n");
      String string0 = appt0.getDescription();
      assertEquals(-562, appt0.getStartMonth());
      assertEquals(-562, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(-562, appt0.getStartDay());
      assertEquals("Y_Rq9/Hr(s", appt0.getTitle());
      assertEquals(-562, appt0.getStartHour());
      assertEquals(-562, appt0.getStartYear());
      assertEquals("Uf*dR$n", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-562), (-562), (-562), (-562), (-562), "Y_Rq9/Hr(s", "Uf*dR$n");
      appt0.setDescription("Uf*dR$n");
      assertEquals(-562, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-562, appt0.getStartYear());
      assertEquals(-562, appt0.getStartHour());
      assertEquals(-562, appt0.getStartDay());
      assertEquals("Uf*dR$n", appt0.getDescription());
      assertEquals("Y_Rq9/Hr(s", appt0.getTitle());
      assertEquals(-562, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-18), (-18), (-18), (-18), (-18), "~W!!?%.", "~W!!?%.");
      assertEquals("~W!!?%.", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(-18, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt((-562), (-562), (-562), (-562), (-562), "Y_Rq9/Hr(s", "Uf*dR$n");
      appt0.setTitle("Y_Rq9/Hr(s");
      assertEquals(-562, appt0.getStartYear());
      assertEquals(-562, appt0.getStartHour());
      assertEquals("Y_Rq9/Hr(s", appt0.getTitle());
      assertEquals(-562, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-562, appt0.getStartDay());
      assertEquals("Uf*dR$n", appt0.getDescription());
      assertEquals(-562, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 3159, 0, 0, "9e", "9e");
      String string0 = appt0.getTitle();
      assertEquals("9e", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals("9e", string0);
      assertEquals(3159, appt0.getStartDay());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-316), (-316), (-316), (-316), (-316), (String) null, (String) null);
      int int0 = appt0.getStartDay();
      assertEquals((-316), int0);
      assertEquals(-316, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-316, appt0.getStartMinute());
      assertEquals(-316, appt0.getStartMonth());
      assertEquals(-316, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-4047), (-4047), 0, 0, 1702, (String) null, (String) null);
      boolean boolean0 = appt0.getValid();
      assertEquals(-4047, appt0.getStartHour());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(1702, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertFalse(boolean0);
      assertEquals(-4047, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt((-2965), (-2965), (-1559), (-2965), (-2965), "Y:D", "Y:D");
      int int0 = appt0.getStartHour();
      assertEquals("Y:D", appt0.getTitle());
      assertEquals(-2965, appt0.getStartMinute());
      assertEquals((-2965), int0);
      assertEquals(-2965, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("Y:D", appt0.getDescription());
      assertEquals(-1559, appt0.getStartDay());
      assertEquals(-2965, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(1261, 3381, 2590, 3381, 0, "", "");
      int int0 = appt0.getStartYear();
      assertEquals(2590, appt0.getStartDay());
      assertEquals(3381, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(3381, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals(1261, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-562), (-562), (-562), (-562), (-562), "Y_Rq9/Hr(s", "Uf*dR$n");
      int int0 = appt0.getStartMinute();
      assertEquals("Y_Rq9/Hr(s", appt0.getTitle());
      assertEquals(-562, appt0.getStartHour());
      assertEquals(-562, appt0.getStartYear());
      assertEquals(-562, appt0.getStartMonth());
      assertEquals("Uf*dR$n", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals((-562), int0);
      assertEquals(-562, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt((-1189), (-1189), 0, 0, (-3063), "", "Minute");
      int int0 = appt0.getStartMonth();
      assertEquals(-1189, appt0.getStartHour());
      assertEquals("", appt0.getTitle());
      assertEquals(-1189, appt0.getStartMinute());
      assertEquals(-3063, appt0.getStartYear());
      assertEquals(0, appt0.getStartDay());
      assertEquals("Minute", appt0.getDescription());
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 8, 0, 0, "", "");
      appt0.setStartMonth(8);
      appt0.setStartHour(11);
      appt0.toString();
      assertEquals(11, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-3144), (-3144), "]tZZ65_&l!Zz$0r", "]tZZ65_&l!Zz$0r");
      appt0.setStartMonth(9);
      appt0.toString();
      assertEquals(9, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 8, 0, 0, "", "");
      String string0 = appt0.toString();
      assertNull(string0);
      assertEquals(8, appt0.getStartDay());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(14, 14, 14, 14, 14, "'I/K'z^9", "xb#'x}y7gmI>");
      int int0 = appt0.getStartYear();
      assertEquals(14, appt0.getStartMonth());
      assertEquals(14, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(14, int0);
      assertEquals(14, appt0.getStartDay());
      assertEquals("'I/K'z^9", appt0.getTitle());
      assertEquals("xb#'x}y7gmI>", appt0.getDescription());
      assertEquals(14, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(1667, 1667, 0, 1660, 1667, "yX8$h)", (String) null);
      String string0 = appt0.getDescription();
      assertEquals(1660, appt0.getStartMonth());
      assertEquals("yX8$h)", appt0.getTitle());
      assertNotNull(string0);
      assertEquals(0, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(1667, appt0.getStartMinute());
      assertEquals("", string0);
      assertEquals(1667, appt0.getStartHour());
      assertEquals(1667, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt((-562), (-562), (-562), (-562), (-562), "Y_Rq9/Hr(s", "Uf*dR$n");
      assertEquals("Y_Rq9/Hr(s", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertEquals(-562, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 8, 0, 0, "", "");
      assertEquals(0, appt0.getStartYear());
      
      appt0.setStartYear(8);
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 288, "G{K57}jH\"qDBvL.pp^", "G{K57}jH\"qDBvL.pp^");
      assertEquals(0, appt0.getStartDay());
      
      appt0.setStartDay(288);
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 8, 0, 0, "", "");
      appt0.setStartMonth(8);
      appt0.toString();
      assertEquals(8, appt0.getStartMonth());
  }
}
